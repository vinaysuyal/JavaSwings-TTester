/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ttester;

import java.awt.AWTEventMulticaster;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author ACER
 */
public class TTester extends javax.swing.JFrame implements DocumentListener, ActionListener   {

    
  private String str;// COntains the original text from the file
  private int mistakes;// Counter for number of mistakes
  ArrayList<String> specific;//Buffer
  String [] wordarray;//Array of space seperated strings
  int wordarraypointer;//pointer to word array corresponding to str
  String Estr; //Current word being typed
  int midpos;// min index of the buffer
    int maxpos;//Max index of the buffer
    private int words;//counter for number of words entered by the user
    private int time;//increases by 1 every second
    private int newLineCount;
    boolean wordountchange;
    Timer tr;
    boolean spaced=false;// whether or not last character entered was a space
    TTester current;//refers to current object
    int span;
    public TTester() {
       current=this;
        initComponents();
       setInitialParameter();
         
        jButton1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                while(time==0)
                {
                String t=JOptionPane.showInputDialog("Enter TIme span in seconds");
                if(t==null)
                {
                    break;
                }
                try
                {
                span=Integer.parseInt(t);
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(current,"Please Enter a valid Integer");
                    continue;
                }
                jTextArea2.requestFocus();
                jTextArea2.setEditable(Boolean.TRUE);
                         tr.start();
                         break;
            }}
         });
        
        jButton2.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent arg0) {
                tr.stop();
                setInitialParameter();
            
            }
        });
        
         jTextArea2.getDocument().addDocumentListener(this); 
         jLabel1.setText(null);
         jLabel2.setText(null);
         jLabel3.setText(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jButton2.setBackground(new java.awt.Color(51, 51, 255));
        jButton2.setForeground(new java.awt.Color(255, 51, 51));
        jButton2.setText("Reset");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel5.add(jButton2, java.awt.BorderLayout.PAGE_START);

        jPanel4.add(jPanel5);

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setPreferredSize(new java.awt.Dimension(164, 94));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jPanel6.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jButton1.setBackground(new java.awt.Color(51, 51, 255));
        jButton1.setForeground(new java.awt.Color(0, 153, 51));
        jButton1.setText("Start");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jPanel6.add(jButton1, java.awt.BorderLayout.PAGE_START);

        jPanel4.add(jPanel6);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel3.setMaximumSize(new java.awt.Dimension(20, 32767));
        jPanel3.setMinimumSize(new java.awt.Dimension(10, 0));
        jPanel3.setPreferredSize(new java.awt.Dimension(15, 278));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.LINE_END);

        jPanel7.setPreferredSize(new java.awt.Dimension(15, 278));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel7, java.awt.BorderLayout.LINE_START);

        jPanel2.setPreferredSize(new java.awt.Dimension(400, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 320, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(46, 46, 46))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_END);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insertUpdate(DocumentEvent arg0) {
         wordountchange=false;

        char[] Etext=jTextArea2.getText().toCharArray();
        
        
        int Elen=Etext.length;
        for(int i=0;i<Elen;i++)
            System.out.print(Etext[i]);
        
        char Elast=Etext[Elen-1];
        if(!(Elast==' '))// if character != 32
        {
    
            spaced=false;
            Estr=Estr+Elast;            
        }
        
        else // if character == 32
        {
            System.out.println("");
            System.out.println("Elast "+Estr);
            System.out.println("");
            System.out.println("wordarray[wordarraypointer] "+wordarray[wordarraypointer]);
            if(spaced)
                return;
            spaced=true;
            words++;
            if(!Estr.equals(wordarray[wordarraypointer]))
            {
                mistakes++;
                jLabel1.setText("Number of Errors made : "+mistakes);
                if(specific.contains(Estr))
                {
                    int a=specific.indexOf(Estr);
                    wordarraypointer=wordarraypointer+(a-midpos);
                }        
                else
                {
                    wordarraypointer++;
                    wordountchange=true;
                }
                
                
                
                 }
            if(!wordountchange)
            {
                 wordarraypointer++;
                 wordountchange=false;
            }
            if(wordarraypointer<3)
            {
               specific=FileManager.getSpecificWords(0, wordarraypointer+1); 
               midpos=wordarraypointer;
            }
            else
            {
                specific=FileManager.getSpecificWords(wordarraypointer-3, wordarraypointer+3); 
                midpos=3;
            }
            Estr="";
            
            
          /*  Estr=" ";
            words++;
            if(words<3)
            {
               specific=FileManager.getSpecificWords(0, words+1); 
            }
            else
            {
                specific=FileManager.getSpecificWords(words-2, words+3); 
            }
            for( String string:specific)
            {
                System.out.println(string);
            }
            */
            
        }
                
        

             }

    @Override
    public void removeUpdate(DocumentEvent arg0) {
            
               
        
    }

    @Override
    public void changedUpdate(DocumentEvent arg0) {
   
    }
  /*  private void errorChecker()
    {
        if(mistakes==20)
        {
                 jTextArea1.setEditable(false);
                 JOptionPane.showMessageDialog(this, "Maximum error counts Reached \nTry Again");
                 jLabel2.setText("Max Error Reached. Editor stopped");
        }
    }*/

    @Override
    public void actionPerformed(ActionEvent arg0) {
     time++;

            jLabel2.setText("Number of words per minute "+(words/(time/60.0))+"Words/minute in "+ time +" Seconds");
            jLabel3.setText("Number of words per minute "+((words-mistakes)/(time/60.0))+" Correct words/minute in "+ time +" Seconds");
            if(time==span)
            {
                jTextArea2.setEditable(false);
                tr.stop();
                JOptionPane.showMessageDialog(this, "Time is Up..\nYour Typing speed as calulated\n in "+span+" seconds : "+((words-mistakes)/(time/60.0))+" words per minute\n Number of mistakes : "+mistakes);
                setInitialParameter();
            }
    }
    
    public void setInitialParameter()
    {
         wordountchange=false;
         newLineCount=0;
        words=0;
        time=0;
        mistakes=0;
        midpos=0;
        midpos=0;
        Estr="";
        Random rand = new Random(); 
        int x=rand.nextInt(8);
        x=x+1;
        str=FileManager.readFile("src\\ttester\\"+x+".txt");
        jTextArea1.setText(str);
        wordarray=FileManager.getWords();
        wordarraypointer=0;
        specific=FileManager.getSpecificWords(0, 0); 
        jTextArea1.setTransferHandler(null);
        jTextArea2.setTransferHandler(null);
        jTextArea2.setText(null);
        jTextArea2.setEditable(false);
        tr=new Timer(1000,this);
        jTextArea2.getInputMap().put(KeyStroke.getKeyStroke("BACK_SPACE"), "none");
    }
}
